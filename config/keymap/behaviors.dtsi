// ------------------------------
// Константы для позиционирования клавиш
// ------------------------------
#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 19 20 21 22  
// Список позиций клавиш для левой руки.

#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 16 15 14 13  
// Список позиций клавиш для правой руки.

#define THUMBS 36 37 38 39 40  
// Позиции клавиш для больших пальцев.

// ------------------------------
// Определение кастомных behaviors
// ------------------------------
/ {
    behaviors {

        // --- Универсальный hold-tap для homerow ---
        ht_num_func: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";           // приоритет на тап
            tapping-term-ms = <175>;            // если удержал дольше — hold
            quick-tap-ms = <150>;               // быстрый повтор — всегда tap
            require-prior-idle-ms = <185>;      // время «покоя» до активации
            bindings = <&kp>, <&kp>;            // hold, tap
        };

        // --- Homerow для левой руки ---
        ht_left: left_side_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";                // баланс hold/tap
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>; // активируется при удержании с другой руки/большого пальца
            hold-trigger-on-release;            // hold срабатывает при отпускании
        };

        // --- Homerow для правой руки ---
        ht_right: right_side_homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        // --- Tap-dance: ESC или Layer 6 ---
        td_esc_scrl_slow: td_esc_scrl_slow {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <150>;
            bindings = <&lt 7 ESC>, <&mo 6>; // tap → ESC, double tap → слой 6
        };

        // --- Tap-dance: пробел или Layer 2 ---
        td_space_nav: td_space {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <120>;
            bindings = <&lt 2 SPACE>, <&kp SPACE>; // hold → Layer 2, tap → Space
        };

        // --- Hold-tap для кликов мыши ---
        mo_clk: mo_click {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";  // приоритет hold
            tapping-term-ms = <40>;     // очень короткий таймаут
            hold-while-undecided;       // держит пока не ясно tap/hold
            bindings = <&mo>, <&mkp>;   // hold → слой, tap → мышиный клик
        };

        // --- Tap-dance: click или Layer 3 ---
        td_clk: td_clk {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&mo_clk 3 LCLK>, <&mkp LCLK>; // tap → левый клик, double tap → слой 3
        };

        // --- Hold-tap для Backspace ---
        mo_kp: mo_kp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor       = "hold-preferred";
            tapping-term-ms = <40>;
            hold-while-undecided;
            bindings = <&mo>, <&kp>;   // hold → слой, tap → Backspace
        };

        // --- Tap-dance: Backspace или Layer 1 ---
        td_bs: td_bs {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <170>;
            bindings = <&mo_kp 1 BACKSPACE>, <&kp BACKSPACE>; // tap → Backspace, double tap → слой 1
        };

        // --- Hold-tap для двух слоёв ---
        httl: ht_two_layers {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&to>;   // hold → momentary layer, tap → toggle layer
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <125>;
        };

        // --- Tap-dance: переключение слоёв ---
        td_layers: td_layer_swap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 4>; // tap → слой 0, double tap → слой 4
        };

        // --- Tap-dance: правый клик или Layer 8 ---
        td_clk_scrl: td_click_or_scroll {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&mkp RCLK>, <&mo 8>;  // tap → правый клик, double tap → слой 8
        };

        // --- Tap-dance: базовый слой или extra ---
        td_bore: BASE_or_EXTRA {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&mo 5>, <&to 0>;  // tap → слой 5, double tap → слой 0
        };

        // --- Mod-morph: вопрос или восклицание ---
        mm_qm_ex: question_exclamation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QUESTION>, <&kp EXCLAMATION>; // без шифта → ?, с шифтом → !
            mods = <(MOD_LSFT | MOD_RSFT)>;
        };

        // --- Mod-morph: точка или двоеточие ---
        mm_pr_col: period_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp COLON>;
            mods = <(MOD_LSFT | MOD_RSFT)>;
        };

        // --- Mod-morph: запятая или точка с запятой ---
        mm_cm_sc: comma_semi_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMICOLON>;
            mods = <(MOD_LSFT | MOD_RSFT)>;
        };
    };
};
