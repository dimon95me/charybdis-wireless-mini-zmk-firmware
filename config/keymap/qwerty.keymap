/* upstream bindings and behaviors */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/ext_power.h>

/* local overlays */

#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"

/ {
    /* --- KEYMAP CONFIG --- */
    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define EXTRAS  5
    // #define SLOW    6
    // #define SCROLL  7

    behaviors {
        ht_uni: ht_uni {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_UNI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        dog {
            bindings = <&kp AT_SIGN>;
            key-positions = <1 2>;
        };

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <4 3>;
        };

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <7 8>;
        };

        Less_Than {
            bindings = <&kp LESS_THAN>;
            key-positions = <16 17>;
        };

        More_Than {
            bindings = <&kp GREATER_THAN>;
            key-positions = <18 19>;
        };

        LBKTt {
            bindings = <&kp LBKT>;
            key-positions = <15 16>;
        };

        RBKTt {
            bindings = <&kp RBKT>;
            key-positions = <19 20>;
        };

        Exclamationn {
            bindings = <&kp EXCLAMATION>;
            key-positions = <30 31>;
        };

        commma {
            bindings = <&kp COMMA>;
            key-positions = <31 32>;
        };

        dott {
            bindings = <&kp DOT>;
            key-positions = <32 33>;
        };

        QMARKk {
            bindings = <&kp QMARK>;
            key-positions = <33 34>;
        };

        apostrophe {
            bindings = <&kp SQT>;
            key-positions = <34 22>;
        };

        double_quotess {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <22 10>;
        };

        colonn {
            bindings = <&kp COLON>;
            key-positions = <21 20>;
        };

        semicolonn {
            bindings = <&kp SEMICOLON>;
            key-positions = <21 22>;
        };

        equall {
            bindings = <&kp EQUAL>;
            key-positions = <10 9>;
        };

        underscoree {
            bindings = <&kp UNDERSCORE>;
            key-positions = <9 8>;
        };

        minuss {
            bindings = <&kp MINUS>;
            key-positions = <9 21>;
        };

        slashh {
            bindings = <&kp SLASH>;
            key-positions = <28 29>;
        };

        pipee {
            bindings = <&kp PIPE>;
            key-positions = <28 27>;
        };

        backslashh {
            bindings = <&kp BACKSLASH>;
            key-positions = <27 26>;
        };
    };

    macros {
        passs: passs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp A &kp R &kp M &kp N7 &kp RBRC &kp W &kp O &kp R &kp K &kp E &kp R &kp S &kp RBRC &kp RBRC &kp ENTER>;
            label = "PASSS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESCAPE           &ht_uni LA(Z) Q   &ht_uni LA(X) W   &ht_uni LA(C) E    &ht_uni LA(A) R  &ht_uni LA(D) T    &kp Y      &kp U             &kp I             &ht_uni LS(LG(O)) O  &kp P                      &kp LEFT_BRACKET
&ht_uni LA(TAB) TAB  &ht_left LSHFT A  &ht_left LCTRL S  &ht_left LALT D    &ht_left LCMD F  &kp G              &kp H      &ht_right RCMD J  &ht_right LALT K  &ht_right RCTRL L    &ht_right RSHFT SEMICOLON  &kp DEL
&kp CAPSLOCK         &ht_uni LG(Z) Z   &ht_uni LG(X) X   &ht_uni LG(C) C    &ht_uni LG(V) V  &kp B              &kp N      &kp M             &mm_cm_sc         &mm_pr_col           &mm_qm_ex                  &none
                                                         &lt 7              &td_space_nav    &mkp LCLK          &kp ENTER  &td_bs
            >;
        };

        NUM {
            bindings = <
&none  &none           &none             &none         &none             &none            &none       &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9  &none  &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp BACKSPACE    &kp COMMA   &kp NUMBER_4     &kp NUMBER_5  &kp NUMBER_6  &kp KP_NUMBER_0  &none
&none  &none           &none             &none         &none             &none            &kp KP_DOT  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &none  &none
                                         &none         &none             &none            &none  &none
            >;
        };

        NAV {
            bindings = <
&none  &msc MOVE_LEFT  &msc MOVE_UP      &none         &msc MOVE_DOWN    &msc MOVE_RIGHT    &none  &kp LG(Z)             &kp UP_ARROW            &kp LG(LS(Z))          &none  &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &none              &none  &kp LEFT_ARROW        &kp DOWN                &kp RIGHT              &none  &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_UP  &mmv MOVE_RIGHT   &none              &none  &kp LG(LEFT_BRACKET)  &kp LA(LG(LEFT_ARROW))  &kp LG(RIGHT_BRACKET)  &none  &none
                                         &none         &none             &none              &none  &trans
            >;
        };

        SYM {
            bindings = <
&none  &none  &none     &kp CARET  &kp TILDE      &none        &kp PLUS      &kp AMPS   &kp LBKT  &kp RBKT  &kp PRCNT  &kp BSLH
&none  &none  &kp LPAR  &kp RPAR   &kp BACKSPACE  &kp UNDER    &kp KP_MINUS  &kp GRAVE  &kp LBRC  &kp RBRC  &kp ASTRK  &kp PIPE
&none  &none  &none     &kp HASH   &none          &kp DLLR     &kp EQUAL     &none      &kp LT    &kp GT    &kp AT     &kp KP_SLASH
                        &none      &trans         &trans       &trans        &trans
            >;
        };

        GAME {
            bindings = <
&kp N1  &kp TAB    &kp Q  &kp W  &kp E      &kp R           &none  &none  &none  &none  &none  &trans
&kp N2  &kp LCTRL  &kp A  &kp S  &kp D      &kp F           &none  &none  &none  &none  &none  &none
&kp N3  &kp LSHFT  &kp Y  &kp X  &kp C      &kp V           &none  &none  &none  &none  &none  &none
                          &none  &kp SPACE  &kp LEFT_ALT    &none  &none
            >;
        };

        EXTRAS {
            bindings = <
&studio_unlock   &none          &lgtm         &none          &none           &kp C_BRIGHTNESS_INC    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3     &out OUT_TOG     &bt BT_CLR
&kp C_SLEEP      &none          &none         &none          &none           &kp C_BRIGHTNESS_DEC    &none         &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_STOP       &kp C_NEXT       &none
&kp C_AL_COFFEE  &none          &none         &none          &none           &none                   &passs        &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PRINTSCREEN  &none
                                              &none          &none           &none                   &none         &none
            >;
        };

        SLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};