/* upstream bindings and behaviors */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/* local overlays */

#include "macros.dtsi"
#include "behaviors.dtsi"
#include "combos.dtsi"

/ {
    /* --- KEYMAP CONFIG --- */
    // ╭──────┬──────┬──────┬──────┬──────┬──────╮  ╭──────┬──────┬──────┬──────┬──────┬──────╮
    //    00     01     02     03    04      05        06     07     08     09     10     11
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    12     13     14     15    16      17        18     19     20     21     22     23
    // ├──────┼──────┼──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┼──────┼──────┼──────┤
    //    24     25     26     27    28      29        30     31     32     33     34     35
    // ╰──────┴──────┴──────┼──────┼──────┼──────┤  ├──────┼──────┼──────┴──────┴──────┴──────╯
    //                         36     37     38        39     40
    //                      ╰──────┴──────┴──────╯  ╰──────┴──────╯
    // #define BASE    0
    // #define NUM     1
    // #define NAV     2
    // #define SYM     3
    // #define GAME    4
    // #define EXTRAS  5
    // #define SLOW    6
    // #define SCROLL  7

    behaviors {
        ht_uni: ht_uni {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_UNI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    combos {
        compatible = "zmk,combos";

        xcode_run {
            bindings = <&kp LG(R)>;
            key-positions = <2 3 4>;
        };

        pipe_slashh {
            bindings = <&kp PIPE>;
            key-positions = <29 30>;
        };

        slashh {
            bindings = <&kp SLASH>;
            key-positions = <30 31>;
        };

        backslashh {
            bindings = <&kp BSLH>;
            key-positions = <29 28>;
        };

        left_brackett {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <17 19>;
        };

        right_brackett {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <17 20>;
        };

        exclamationn {
            bindings = <&kp EXCLAMATION>;
            key-positions = <17 18>;
        };

        minuss {
            bindings = <&kp MINUS>;
            key-positions = <7 8>;
        };

        underscoree {
            bindings = <&kp UNDERSCORE>;
            key-positions = <8 9>;
        };

        equall {
            bindings = <&kp EQUAL>;
            key-positions = <9 10>;
        };

        left_bracee {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <17 21>;
        };

        right_bracee {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <17 22>;
        };

        discard {
            bindings = <&kp LG(LA(Z))>;
            key-positions = <25 26 24>;
        };

        make_screenshot {
            bindings = <&kp LG(LC(LS(N4)))>;
            key-positions = <31 32 33>;
        };

        tverdyi_znak {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <11 9>;
        };

        yo {
            bindings = <&kp GRAVE>;
            key-positions = <5 3>;
        };

        lparr {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <17 31>;
        };

        rparr {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 32>;
        };
    };

    //  // Тап-данс после макросов
    //  td_layer7_mods: td_layer7_mods {
    //      compatible = "zmk,behavior-tap-dance";
    //      #binding-cells = <0>;
    //      tapping-term-ms = <200>;
    //
    //      // 1 tap  → включает sticky слой 7
    //      // 2 taps → удерживает Control + включает sticky слой 7
    //      // 3 taps → удерживает Command + включает sticky слой 7
    //      bindings = <
    //          &sl 7
    //          &macro_control_layer7
    //          &macro_command_layer7
    //      >;
    //  };
    // Остальные макросы остаются внутри `macros`

    macros {
        passs: passs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp A &kp R &kp M &kp N7 &kp RBRC &kp W &kp O &kp R &kp K &kp E &kp R &kp S &kp RBRC &kp RBRC &kp ENTER>;
            label = "PASSS";
        };

        //  // Макросы определены в корне
        //  macro_control_layer7 {
        //      compatible = "zmk,behavior-macro";
        //      label = "CTRL_LAYER7";
        //      #binding-cells = <0>;
        //      bindings = <&kp LCTRL &sl 7>;
        //  };
        //  macro_command_layer7 {
        //      compatible = "zmk,behavior-macro";
        //      label = "CMD_LAYER7";
        //      #binding-cells = <0>;
        //      bindings = <&kp LGUI &sl 7>;
        //  };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp CAPSLOCK         &ht_uni LA(Z) Q   &ht_uni LA(X) W   &ht_uni LA(C) E  &ht_uni LA(A) R  &ht_uni LA(D) T    &kp Y      &kp U             &kp I             &ht_uni LS(LG(O)) O  &kp P                      &kp LEFT_BRACKET
&ht_uni LA(TAB) TAB  &ht_left LSHFT A  &ht_left LCTRL S  &ht_left LALT D  &ht_left LCMD F  &kp G              &kp H      &ht_right RCMD J  &ht_right LALT K  &ht_right RCTRL L    &ht_right RSHFT SEMICOLON  &kp SQT
&kp ESCAPE           &ht_uni LG(Z) Z   &ht_uni LG(X) X   &ht_uni LG(C) C  &ht_uni LG(V) V  &kp B              &kp N      &kp M             &kp COMMA         &kp DOT              &kp SLASH                  &none
                                                         &td_scroll       &td_space_nav    &mkp LCLK          &kp ENTER  &td_bs
            >;
        };

        NUM {
            bindings = <
&none  &none           &none             &none         &none             &none            &none       &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &none            &none
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &kp BACKSPACE    &kp COMMA   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_NUMBER_0  &none
&none  &none           &none             &none         &none             &none            &kp KP_DOT  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &none            &none
                                         &none         &none             &none            &none       &none
            >;
        };

        NAV {
            bindings = <
&none  &msc MOVE_LEFT  &msc MOVE_UP      &none         &msc MOVE_DOWN    &msc MOVE_RIGHT    &none  &kp LG(Z)             &kp UP_ARROW            &kp LG(LS(Z))          &none               &kp LC(UP)
&none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &none              &none  &kp LEFT_ARROW        &kp DOWN                &kp RIGHT              &kp LC(LEFT_ARROW)  &kp LC(RIGHT)
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_UP  &mmv MOVE_RIGHT   &none              &none  &kp LG(LEFT_BRACKET)  &kp LA(LG(LEFT_ARROW))  &kp LG(RIGHT_BRACKET)  &none               &kp LC(DOWN)
                                         &none         &none             &none              &none  &trans
            >;
        };

        SYM {
            bindings = <
&none  &none  &none     &kp CARET  &kp TILDE      &none        &kp PLUS      &kp AMPS   &kp LBKT  &kp RBKT  &kp PRCNT  &kp BSLH
&none  &none  &kp LPAR  &kp RPAR   &kp BACKSPACE  &kp UNDER    &kp KP_MINUS  &kp GRAVE  &kp LBRC  &kp RBRC  &kp ASTRK  &kp PIPE
&none  &none  &none     &kp HASH   &none          &kp DLLR     &kp EQUAL     &none      &kp LT    &kp GT    &kp AT     &kp KP_SLASH
                        &none      &trans         &trans       &trans        &trans
            >;
        };

        GAME {
            bindings = <
&kp N1  &kp TAB    &kp Q  &kp W  &kp E      &kp R           &none  &none  &none  &none  &none  &trans
&kp N2  &kp LCTRL  &kp A  &kp S  &kp D      &kp F           &none  &none  &none  &none  &none  &none
&kp N3  &kp LSHFT  &kp Y  &kp X  &kp C      &kp V           &none  &none  &none  &none  &none  &none
                          &none  &kp SPACE  &kp LEFT_ALT    &none  &none
            >;
        };

        EXTRAS {
            bindings = <
&studio_unlock   &none  &lgtm  &none  &none  &kp C_BRIGHTNESS_INC    &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2       &bt BT_SEL 3     &out OUT_TOG     &bt BT_CLR
&kp C_SLEEP      &none  &none  &none  &none  &kp C_BRIGHTNESS_DEC    &none         &kp C_PREVIOUS  &kp C_PLAY_PAUSE   &kp C_STOP       &kp C_NEXT       &none
&kp C_AL_COFFEE  &none  &none  &none  &none  &none                   &passs        &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp PRINTSCREEN  &none
                               &none  &none  &none                   &none         &none
            >;
        };

        SLOW {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
